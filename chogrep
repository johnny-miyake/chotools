#!/usr/bin/env ruby

# Mac FS uses UTF-8 for file names
$KCODE='u'

# load my library
Libdir=File.dirname(__FILE__)
require "#{Libdir + '/cholib.rb'}"

def usage
  $stderr.puts "usage: #{File.basename(__FILE__)} <pattern>"
end

def main
  if ARGV.size != 1
    usage
    exit 1
  end
  pat = Regexp.new(ARGV[0], Regexp::IGNORECASE)

  open(Cho::CacheFile, "r") do |cf|
    i = 0
    cf.each do |l|
      l.chomp!
      dir   = Cho::ChoHome + '/' + l
      tfile = dir + '/' + Cho::TitleFileName
      if File.exist?(tfile)
	title = nil
	found = false
	open(tfile, "r") do |tf|
	  title = tf.gets.chomp
	  tf.rewind
	  tf.each do |t|
	    t.chomp!
	    if t == Cho::Keyword	# we always have this; ignore
	      next
	    elsif pat =~ t
	      found = true
	      break
	    end
	  end
	end
	if found
	  printf "(%s) %s (%s)\n", Cho.numtotag(i) || '  ', title, l
	end
      # else: it does not exist (maybe unmounted), but count it to generate correct tags
      end
      i += 1
    end
  end
  0
end

main
