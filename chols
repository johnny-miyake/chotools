#!/usr/bin/env ruby
# coding: utf-8
$KCODE = 'UTF8' if RUBY_VERSION < '1.9.0'

require 'optparse'

# load my library
Libdir=File.dirname(__FILE__)
require "#{Libdir + '/cholib.rb'}"

def usage
  $stderr.puts "usage: #{File.basename(__FILE__)} <keyword>"
end

def main
  long = false          # option -l sets this true

  opt = OptionParser.new
  opt.on('-l'){|v| long = true}
  opt.parse!(ARGV)

  pat = nil
  if ARGV.size > 1
    usage
    exit 1
  elsif ARGV.size == 1
    pat = Regexp.new(ARGV[0], Regexp::IGNORECASE)
  end

  open(Cho::CacheFile, "r") do |cf|
    i = 0
    cf.each do |l|
      l.chomp!
      dir   = Cho::ChoHome + '/' + l
      if pat.nil? or pat =~ dir
        tfile = dir + '/' + Cho::TitleFileName
        if File.exist?(tfile)
          title = nil
          open(tfile, "r") do |tf|
            title = tf.gets.chomp
          end
          if long
            ufile = dir + '/' + Cho::UsedDateFileName
            if File.exist?(ufile)
              utime = nil
              open(ufile, "r") do |uf|
                utime = ' ' + Time.at(uf.gets.to_i).strftime('%Y/%m/%d')
              end
            else
              utime = ' ????/??/??'
            end
          else
            utime = ''
          end
          printf "(%s)%s %s (%s)\n", Cho.numtotag(i) || '  ', utime, title, l
          $stdout.flush
        # else: it does not exist (maybe unmounted), but is counted to generate tags
        end
      end
      i += 1
    end
  end
  0
end

main
